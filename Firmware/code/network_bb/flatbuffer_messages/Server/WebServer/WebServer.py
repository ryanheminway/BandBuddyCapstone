# automatically generated by the FlatBuffers compiler, do not modify

# namespace: WebServer

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class WebServer(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = WebServer()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsWebServer(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # WebServer
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # WebServer
    def Genre(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # WebServer
    def Timbre(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # WebServer
    def Tempo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # WebServer
    def Temperature(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # WebServer
    def Bars(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # WebServer
    def Velocity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def Start(builder): builder.StartObject(6)
def WebServerStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddGenre(builder, genre): builder.PrependUint32Slot(0, genre, 0)
def WebServerAddGenre(builder, genre):
    """This method is deprecated. Please switch to AddGenre."""
    return AddGenre(builder, genre)
def AddTimbre(builder, timbre): builder.PrependUint32Slot(1, timbre, 0)
def WebServerAddTimbre(builder, timbre):
    """This method is deprecated. Please switch to AddTimbre."""
    return AddTimbre(builder, timbre)
def AddTempo(builder, tempo): builder.PrependUint32Slot(2, tempo, 0)
def WebServerAddTempo(builder, tempo):
    """This method is deprecated. Please switch to AddTempo."""
    return AddTempo(builder, tempo)
def AddTemperature(builder, temperature): builder.PrependFloat64Slot(3, temperature, 0.0)
def WebServerAddTemperature(builder, temperature):
    """This method is deprecated. Please switch to AddTemperature."""
    return AddTemperature(builder, temperature)
def AddBars(builder, bars): builder.PrependUint32Slot(4, bars, 0)
def WebServerAddBars(builder, bars):
    """This method is deprecated. Please switch to AddBars."""
    return AddBars(builder, bars)
def AddVelocity(builder, velocity): builder.PrependFloat64Slot(5, velocity, 0.0)
def WebServerAddVelocity(builder, velocity):
    """This method is deprecated. Please switch to AddVelocity."""
    return AddVelocity(builder, velocity)
def End(builder): return builder.EndObject()
def WebServerEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)